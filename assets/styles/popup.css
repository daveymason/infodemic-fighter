/* General body styles */
body {
  font-family: var(--font-family-base);
  background-color: var(--bg-primary);
  color: var(--text-primary);
  margin: 0;
  width: 380px; /* Fixed width for the popup */
  padding: var(--size-md);
  border: 1px solid var(--border-color);
  box-sizing: border-box;
}

/* Dark mode specific styles */
body.dark-mode {
  --bg-primary: var(--dark-bg-primary);
  --bg-secondary: var(--dark-bg-secondary);
  --bg-elevated: var(--dark-bg-elevated);
  --text-primary: var(--dark-text-primary);
  --text-secondary: var(--dark-text-secondary);
  --border-color: var(--dark-border-color);
  --accent-primary: var(--dark-accent-primary);
  --accent-secondary: var(--dark-accent-secondary);
}

/* Header styles */
.header {
  display: flex;
  align-items: center;
  margin-bottom: var(--size-lg);
  padding-bottom: var(--size-md);
  border-bottom: 1px solid var(--border-color);
}

.logo {
  width: 40px;
  height: 40px;
  margin-right: var(--size-md);
}

.header h1 {
  font-size: 1.5em;
  margin: 0;
  color: var(--text-primary);
}

/* Tabs navigation */
.tabs {
  display: flex;
  margin-bottom: var(--size-lg);
  border-bottom: 1px solid var(--border-color);
}

.tabs button {
  flex-grow: 1;
  padding: var(--size-md) 0;
  background: none;
  border: none;
  border-bottom: 3px solid transparent;
  cursor: pointer;
  font-size: 1em;
  color: var(--text-secondary);
  transition: color var(--transition-fast), border-color var(--transition-fast);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--size-xs);
}

.tabs button:hover {
  color: var(--accent-primary);
}

.tabs button.active {
  color: var(--accent-primary);
  border-bottom-color: var(--accent-primary);
  font-weight: var(--font-weight-semibold);
}

/* Tab content */
.tab-content {
  display: none; /* Hidden by default */
  animation: fadeIn var(--transition-normal) ease-out;
}

.tab-content.active {
  display: block; /* Shown when active */
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(5px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Settings tab specific styles */
.toggle-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--size-md) 0;
  border-bottom: 1px solid var(--border-color-light);
}

.toggle-container:last-child {
  border-bottom: none; /* No border for the last item */
}

.toggle-container span {
  font-size: 0.95em;
  color: var(--text-primary);
}

/* Toggle switch styles */
.toggle {
  position: relative;
  display: inline-block;
  width: 44px; /* Reduced width */
  height: 24px; /* Reduced height */
}

.toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-secondary);
  transition: .3s;
  border-radius: 24px; /* Adjusted for height */
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px; /* Reduced size */
  width: 18px;  /* Reduced size */
  left: 3px;    /* Adjusted position */
  bottom: 3px;  /* Adjusted position */
  background-color: white;
  transition: .3s;
  border-radius: 50%;
  box-shadow: 0 1px 3px rgba(0,0,0,0.2);
}

input:checked + .slider {
  background-color: var(--accent-primary);
}

input:focus + .slider {
  box-shadow: 0 0 1px var(--accent-primary);
}

input:checked + .slider:before {
  transform: translateX(20px); /* Adjusted for new width */
}

/* About tab specific styles */
#content-about {
  text-align: center;
  font-size: 0.9em;
  line-height: 1.6;
  color: var(--text-secondary);
}

#content-about .logo-container {
  margin-bottom: var(--size-md);
}

#content-about .logo-container img {
  width: 60px;
  height: 60px;
  opacity: 0.8;
}

#content-about p {
  margin-bottom: var(--size-sm);
}

.version {
  margin-top: var(--size-lg);
  font-size: 0.8em;
  color: var(--text-secondary);
}

/* Shared icon styles for tabs */
.tabs button [class^="icon-"] {
  display: inline-block;
  width: 18px;
  height: 18px;
  background-color: currentColor; /* Use tab text color */
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
  transition: background-color var(--transition-fast);
}

.icon-microscope { mask-image: url('../icons/microscope.svg'); }
.icon-lab { mask-image: url('../icons/lab.svg'); }
.icon-data { mask-image: url('../icons/data.svg'); }
.icon-analysis { mask-image: url('../icons/analysis.svg'); }

/* Ensure icons in active tab also take accent color */
.tabs button.active [class^="icon-"] {
  background-color: var(--accent-primary);
}

/* Sonar API Key Section Styles */
.api-key-container {
  margin: var(--size-md) 0;
  display: flex;
  flex-direction: column;
  gap: var(--size-sm); /* Consistent spacing for elements within the container */
}

.api-key-container label {
  font-size: 0.95em; /* Consistent with .toggle-container span */
  color: var(--text-primary);
  margin-bottom: var(--size-xs); /* Small gap between label and input field, assuming --size-xs is defined (e.g., 4px or 0.25rem) */
}

#sonarApiKey {
  width: 100%;
  padding: var(--size-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm, 4px); /* Fallback if --radius-sm is not defined */
  background-color: var(--bg-secondary); /* Matches toggle switch background */
  color: var(--text-primary);
  box-sizing: border-box; /* Includes padding and border in the element's width */
  font-family: var(--font-family-base); /* Ensures font consistency */
}

#saveSonarApiKey {
  padding: var(--size-sm) var(--size-md); /* Standard padding */
  background-color: var(--accent-primary); /* Primary action color */
  color: var(--dark-text-primary); /* Text color for contrast on accent; usually white */
  border: none;
  border-radius: var(--radius-sm, 4px); /* Fallback if --radius-sm is not defined */
  cursor: pointer;
  align-self: flex-start; /* Prevents button from stretching full-width */
  transition: background-color var(--transition-fast), filter var(--transition-fast);
  font-family: var(--font-family-base); /* Ensures font consistency */
  font-weight: var(--font-weight-medium, 500); /* Fallback if --font-weight-medium is not defined */
}

#saveSonarApiKey:hover {
  background-color: var(--accent-secondary); /* Hover color from theme variables */
}

#saveSonarApiKey:active {
  filter: brightness(85%); /* Visual feedback when button is pressed */
}
